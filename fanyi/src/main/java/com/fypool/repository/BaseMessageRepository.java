package com.fypool.repository;

import com.fypool.model.BaseMessage;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import javax.transaction.Transactional;
import java.util.Date;
import java.util.List;
import java.util.Set;

/**
* Generated by Spring Data Generator on 20/10/2017
*/
@Repository
public interface BaseMessageRepository extends JpaRepository<BaseMessage, Integer> {
    Boolean existsBySenderAndReceiver(String Sender,String Receiver);
    //获取当前用户与所有他人的的聊天记录
    List<BaseMessage> findAllByReceiverAndReadingOrderByCreatedAtDesc(String Receiver, Integer reading);

    //得到最后一条消息
    BaseMessage findTopBySenderOrderByCreatedAtDesc(String username);

    //得到最后一个接收者为用户的记录
    BaseMessage findTopByReceiverOrderByCreatedAtDesc(String username);

    //得到两人的聊天的最后一条
    BaseMessage findTopBySenderAndReceiverOrderByCreatedAtDesc(String sender,String receiver);


    //获取当前用户与接收者之间的聊天记录分页
    Page<BaseMessage> findAllBySenderAndReceiverOrReceiverAndSenderOrderByCreatedAtAsc(String Sender, String Receiver,String Sender2, String Receiver2, Pageable pageable);

    //把所有未读消息更新为已读
    @Modifying(clearAutomatically = true)//自动刷新更改
    @Transactional
    @Query("update BaseMessage b set b.reading = 1 where b.receiver = ?1 and b.sender = ?2 and b.reading = 0")
    Integer updateRead(String receiver,String sender);

    @Query("select b.sender from BaseMessage b where b.receiver = ?1 order by b.createdAt desc")
    Set<String> getResults(String receiver);

    Integer countByReceiverAndReading(String receiver,Integer reading);

}
