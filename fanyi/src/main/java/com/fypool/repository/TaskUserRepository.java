package com.fypool.repository;

import com.fypool.model.Task;
import com.fypool.model.Attribute;
import com.fypool.model.TaskUser;
import com.fypool.model.User;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Set;

/**
* Generated by Spring Data Generator on 23/10/2017
*/
@Repository
public interface TaskUserRepository extends JpaRepository<TaskUser, Integer> , JpaSpecificationExecutor<TaskUser> {
    Boolean existsByTaskAndUser(Task task, User user);
    TaskUser findByTaskAndUserAndSelected(Task task,User user,Integer selected);

    Page<TaskUser> findAllByTask(Task task, Pageable pageable);
    //找投标用户
    TaskUser findByTaskAndUser(Task task, User user);

    //找到用户投标
    TaskUser findByIdAndUser(Integer id,User user);

    //找中标用户
    TaskUser findByTaskAndSelected(Task task,Integer selected);

    Integer countAllByUser(User user);

    //用户找到自己投标的所有任务
    Page<TaskUser> findAllByUser(User user,Pageable pageable);
    Page<TaskUser> findAllByUserAndTask_Process_UserAndTask_Process_Process(User user,User user2,Integer process,Pageable pageable);

    List<TaskUser> findAllByTaskAndUserOrderByUser_IdDesc(Task task, User user);



    //jpa不支持没有外键的左联，右联，内联
    //jpa不支持hql的limit，使用entityManager的setMaxResults(2).getResultList()或者使用分页的limit
    //jpa不支持嵌套的select,改用左联，右联，内联来关联及需要排序的字段
    @Query("select t from  TaskUser  t left join t.attribute  where t.task = :task order by score desc")
    Page<TaskUser> selectTopUser(@Param("task") Task task,Pageable pageable);

    @Query("select count(*) from TaskUser t where t.task in (select task from Task task where user = ?1)")
    Integer countTotalJoins(User user);

}

